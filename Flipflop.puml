@startuml

class Taster{
Output out
Taster(output)
press()
release()
}

abstract class Component {
String name
List<Input> inputs
List<Output> outputs
Component(name, inputs, outputs)
calcState()
}

class Input{
Component comp
Input(component)
}

abstract class Node{
boolean state
Node(state)
getState()
setState(state)
}

class Output{
List<Input> inputs
Output(inputs)
}

class FF{
boolean state
int set
int reset
int q
int not_q
FF(name, inputs, outputs)
calcState()
}

class LED{
boolean isOn
LED(boolean)
calcState()
}

Component <|-- LED
Component <|-- FF
Node <|-- Output
Node <|-- Input

@enduml